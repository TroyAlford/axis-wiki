{"version":3,"sources":["webpack://axis-wiki/./source/components/dynamic/AceEditor.js"],"names":["_react","__webpack_require__","AceEditor","componentDidMount","_this","editor","session","on","_","count","$annotations","length","updated","filter","annotation","test","text","setAnnotations","componentWillUnmount","setRef","ace","render","_react2","default","createElement","_reactAce2","_extends3","ref","props","defaultProps","editorProps","$blockScrolling","Infinity","mode","name","scrollMargin","setOptions","displayIndentGuides","enableMultiselect","highlightActiveLine","highlightSelectedWord","showInvisibles","showPrintMargin","wrap","showGutter","tabSize","theme","height","width"],"mappings":"oQAAAA,EAAAC,EAAA,mBACAA,EAAA,4DACAA,EAAA,QACAA,EAAA,YAEqBC,wOAsBnBC,kBAAoB,WAClBC,EAAKC,OAAOC,QAAQC,GAAG,mBAAoB,SAACC,EAAGF,GAC7C,IAAMG,EAAQH,EAAQI,aAAaC,OAC7BC,EAAUN,EAAQI,aAAaG,OAAO,SAAAC,GAAA,OACzC,WAAWC,KAAKD,EAAWE,QAG1BJ,EAAQD,SAAWF,GAAOH,EAAQW,eAAeL,QAGzDM,qBAAuB,WAAQd,EAAKC,OAAS,QAE7Cc,OAAS,SAACC,GAAUhB,EAAKC,QAAUe,OAAWf,UAC9CgB,OAAS,kBAAMC,EAAAC,QAAAC,cAAAC,EAAAF,SAAA,EAAAG,EAAAH,UAAUI,IAAKvB,EAAKe,QAAYf,EAAKwB,2EAlC7CC,cACLC,aAAeC,gBAAiBC,KAChCC,KAAM,OACNC,KAAM,OACNC,cAAe,EAAG,EAAG,EAAG,GACxBC,YACEC,qBAAqB,EACrBC,mBAAmB,EACnBC,qBAAqB,EACrBC,uBAAuB,EACvBC,gBAAgB,EAChBC,iBAAiB,EACjBC,MAAM,GAERC,YAAY,EACZC,QAAS,EACTC,MAAO,SACPC,OAAQ,OACRC,MAAO,qBAnBU9C","file":"application.AceEditor.js","sourcesContent":["import React, { Component } from 'react'\nimport ReactAce from 'react-ace'\nimport 'brace/mode/html'\nimport 'brace/theme/chrome'\n\nexport default class AceEditor extends Component {\n  static defaultProps = {\n    editorProps: { $blockScrolling: Infinity },\n    mode: 'html',\n    name: 'html',\n    scrollMargin: [5, 0, 5, 0],\n    setOptions: {\n      displayIndentGuides: true,\n      enableMultiselect: true,\n      highlightActiveLine: true,\n      highlightSelectedWord: true,\n      showInvisibles: false,\n      showPrintMargin: false,\n      wrap: true,\n    },\n    showGutter: true,\n    tabSize: 2,\n    theme: 'chrome',\n    height: '100%',\n    width: '100%',\n  }\n\n  componentDidMount = () => {\n    this.editor.session.on('changeAnnotation', (_, session) => {\n      const count = session.$annotations.length\n      const updated = session.$annotations.filter(annotation =>\n        !/doctype/i.test(annotation.text)\n      )\n\n      if (updated.length !== count) session.setAnnotations(updated)\n    })\n  }\n  componentWillUnmount = () => { this.editor = null }\n\n  setRef = (ace) => { this.editor = (ace || {}).editor }\n  render = () => <ReactAce ref={this.setRef} {...this.props} />\n}\n"],"sourceRoot":""}